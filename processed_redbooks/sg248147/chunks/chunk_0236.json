{
  "content": "ca_cert_path }}/OurCorp.crt\" passphrase: zvm4secret z/VM System SSL supports the use of a PKCS#12 key file as an alternative to the traditional gskkyman key database (KDB). Although the KDB format still has some advantages on z/VM (it is easier to have different certificates for different purposes stored in the same key database, for example) the easy generation of a PKCS#12 file by using common utilities makes it attractive. In our example, after the PKCS#12 file that is generated by the Ansible task is sent to z/VM, the configuration is almost complete. We used FTP as a transport to send the file by using a single curl command, as shown in Example 3-3. We then also used FTP to store the PKCS#12 file passphrase in the required stash file (.p12pw). Example 3-3 Transferring the PKCS#12 file to z/VM, and creating the passphrase stash file $ curl -v -T /etc/pki/tls/certs/zVM.p12 -Q \"CWD /../VMBFS:VMSYS:GSKSSLDB/\" ftp://maint.by.ibmvm1:ibmzvm@9.60.86.71/ * Trying 9.60.86.71... *",
  "metadata": {
    "title": "Virtualization Cookbook for IBM Z Volume 1: IBM z/VM 7.2",
    "author": "IBM",
    "date": "D:20241111075020Z",
    "abstract": null,
    "keywords": [
      "S/390 Satellite System z Tivoli VTAM WebSphere XIV z Systems z/Architecture z/OS z/VM z/VSE z13 z15 zEnterprise Linux ITIL Windows Microsoft Java Red Hat OpenShift Fedora Ansible UNIX VMware AIX DB2 DS8000 eServer FICON FlashCopy"
    ],
    "file_name": "sg248147.pdf",
    "file_size": 6234969,
    "page_count": 546,
    "processed_date": "2025-03-17T13:37:11.089125",
    "chunk_number": 236,
    "word_count": 155
  }
}